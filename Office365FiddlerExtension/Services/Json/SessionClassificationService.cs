using Fiddler;
using Fiddler.WebFormats;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using Office365FiddlerExtension.Services;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Office365FiddlerExtension.Services
{
    /// <summary>
    /// 
    /// </summary>
    public class SessionClassificationService
    {
        internal Session session { get; set; }

        private static SessionClassificationService _instance;
        public static SessionClassificationService Instance => _instance ?? (_instance = new SessionClassificationService());

        /// <summary>
        /// Expecting a "Section|Section" to be passed into function.
        /// Function allows multiple depths to be passed in. Expecting 2 or 3 is the most likely use case.
        /// </summary>
        /// <param name="section"></param>
        public SessionClassificationJsonSection GetSessionClassificationJsonSection(string section)
        {
            // REVIEW THIS -- Remove commented lines of debugging logging.
            //FiddlerApplication.Log.LogString($"{Assembly.GetExecutingAssembly().GetName().Name} ({this.GetType().Name}): GetSessionClassificationJsonSection ENTRY");

            string sectionPiece0 = "";
            string sectionPiece1 = "";
            //string sectionPiece2 = "";

            var jsonSection = "";

            var parsedObject = JObject.Parse(Preferences.SessionClassification);

            //FiddlerApplication.Log.LogString($"{Assembly.GetExecutingAssembly().GetName().Name} ({this.GetType().Name}): GetSessionClassificationJsonSection PARSEDOBJECT");

            if (section.Contains('|')) {
                //FiddlerApplication.Log.LogString($"{Assembly.GetExecutingAssembly().GetName().Name} ({this.GetType().Name}): GetSessionClassificationJsonSection PIPE: {section}");

                string[] sectionPieces = section.Split('|');

                //if (sectionPieces.Length == 2)
                //{
                    //foreach (string piece in sectionPieces)
                    //{
                    //    FiddlerApplication.Log.LogString($"{Assembly.GetExecutingAssembly().GetName().Name} ({this.GetType().Name}): {piece}");
                    //}

                    sectionPiece0 = sectionPieces[0];
                    sectionPiece1 = sectionPieces[1];
                    //FiddlerApplication.Log.LogString($"{Assembly.GetExecutingAssembly().GetName().Name} ({this.GetType().Name}): {sectionPieces.Length} " +
                    //    $"sectionPiece0: {sectionPiece0} sectionPiece1: {sectionPiece1} : {parsedObject[sectionPiece0][sectionPiece1].ToString()}");
                    jsonSection = parsedObject[sectionPiece0][sectionPiece1].ToString();
                //}
                /*else if (sectionPieces.Length == 3)
                {
                    foreach (string piece in sectionPieces)
                    {
                        FiddlerApplication.Log.LogString($"{Assembly.GetExecutingAssembly().GetName().Name} ({this.GetType().Name}): {piece}");
                    }

                    sectionPiece0 = sectionPieces[0];
                    sectionPiece1 = sectionPieces[1];
                    sectionPiece2 = sectionPieces[2];
                    FiddlerApplication.Log.LogString($"{Assembly.GetExecutingAssembly().GetName().Name} ({this.GetType().Name}): {sectionPieces.Length} " +
                        $"sectionPiece0: {sectionPiece0} sectionPiece1: {sectionPiece1} sectionPiece2: {sectionPiece2} : {parsedObject[sectionPiece0][sectionPiece1][sectionPiece2].ToString()}");
                    jsonSection = parsedObject[sectionPiece0][sectionPiece1][sectionPiece2].ToString();
                }*/
            }
            else
            {
                //FiddlerApplication.Log.LogString($"{Assembly.GetExecutingAssembly().GetName().Name} ({this.GetType().Name}): GetSessionClassificationJsonSection NO PIPE");

                //FiddlerApplication.Log.LogString($"{Assembly.GetExecutingAssembly().GetName().Name} ({this.GetType().Name}): " +
                //    $"section: {section}: {parsedObject[section]}");
                jsonSection = parsedObject[section].ToString();
            }

            return JsonConvert.DeserializeObject<SessionClassificationJsonSection>(jsonSection);
        }

        /*public SessionClassificationFlags GetDeserializedSessionFlags(Session Session)
        {
            this.session = Session;

            try
            {
                return JsonConvert.DeserializeObject<SessionClassificationFlags>(GetSessionClassificationJsonData(this.session));
            }
            catch (Exception ex)
            {
                FiddlerApplication.Log.LogString($"{Assembly.GetExecutingAssembly().GetName().Name} ({this.GetType().Name}): Error deserializing session flags.");
                FiddlerApplication.Log.LogString($"{Assembly.GetExecutingAssembly().GetName().Name} ({this.GetType().Name}): {ex}");
            }
            return null;
        }*/

        public void CreateSessionClassificationFiddlerSetting()
        {
            if (Preferences.SessionClassification != null)
            {
                return;
            }

            string AssemblyShippedJsonData = "";

            var base64EncodedBytes = Convert.FromBase64String(AssemblyShippedJsonData);
 
            Preferences.SessionClassification = Encoding.UTF8.GetString(base64EncodedBytes); ;
        }

        /*public string GetSessionClassificationJsonData(Session Session)
        {
            this.session = Session;



            return null;
            
        }

        public SessionClassificationFlags GetDeserializedSessionClassification()
        {
            var JsonSettings = new JsonSerializerSettings
            {
                NullValueHandling = NullValueHandling.Ignore,
                MissingMemberHandling = MissingMemberHandling.Ignore
            };

            try
            {
                return JsonConvert.DeserializeObject<SessionClassificationFlags>(Preferences.SessionClassification, JsonSettings);
            }
            catch (Exception ex)
            {
                FiddlerApplication.Log.LogString($"{Assembly.GetExecutingAssembly().GetName().Name} ({this.GetType().Name}): Error deserializing extension version.");
                FiddlerApplication.Log.LogString($"{Assembly.GetExecutingAssembly().GetName().Name} ({this.GetType().Name}): {ex}");
            }
            return null;
        }

        public class SessionClassificationFlags
        {
            public string BroadLogicChecks { get; set; }

            public string FiddlerUpdateSessions { get; set; }
        }*/
    }

    public class SessionClassificationJsonSection
    {
        public string SectionTitle { get; set; }

        public string SessionType { get; set; }

        public string SessionResponseAlert { get; set; }

        public int SessionAuthenticationConfidenceLevel { get; set; }

        public int SessionTypeConfidenceLevel { get; set; }

        public int SessionResponseServerConfidenceLevel { get; set; }

        public int SessionSeverity { get; set; }
    }
}
